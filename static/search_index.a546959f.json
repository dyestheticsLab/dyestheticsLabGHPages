[{"id":0,"title":"Component react creators","content":"#\n\nAs of now we have only one utility, we plan to create more, of course, in the\nfollowing weeks.\n\nThis utility is the react component creators\n\n\nWhat does it do?#\n\nThese utilities are actually react component factories for what some libraries\nlike MUI and Mantine know as Polymorphic Components and also to create\ncomponents that extract some props and use them to resolve the className. There\nis a reason we are creating this; we have some ideas in mind following the\narticle we published in medium to create some optimizations in build/compile\ntime.\n\nIn short, this means you can create a Button that can render not only as a\nbutton but as any other React ElementType.\n\nAlso you are going to be able to create a className resolver function that\nextracts from your props what info is needed to create a className according to,\nfor instance, some variants of your component, and separate them from the real\nprops of the component.\n\nI almost forgot to mention that it is typesafe, so your IDE is going to\nautocomplete the needed props.\n\n> ⚠️ WARNING: This library is only compatible with React 19. It will not work\n> with earlier versions of React due to dependency on new features and APIs\n> introduced in React 19.\n\n\nInstallation#\n\n\nUsage#\n\n\nCreating a styled component#\n\nThis is a factory of a polymorphic component that also accepts variant props for\nyour custom className resolver\n\n\n\nThe extractStyleProps is a needed function to separate what props are real props\nof your component (componentOwnProps) and what props are going to be used to\nresolve the className (styleProps).\n\nThe classNameResolver will only get what you defined in extractStyleProps as\nstyleProps and you may use that to form your final className to get the correct\nstyles.\n\nSometimes you would want not to modify the className but the style prop, this is\nto apply change control via css vars; for those cases we provide a styleResolver\nfunction.\n\n\n\n\n\nIn any case, you can use the Button component like this:\n\n\n\n\nExample with tailwindVariants and Rambda#\n\n\n\nThen you can use your shiny button like this\n\n\n\nWhy would I want a button that is a link? Well, because sometimes you need the\nstyles of a button in an anchor tag.\n\n\nCreating a only polymorphic component#\n\nBut if you do not want to create a custom className resolver and only need a\npolymorphic component you can use createReactMetaComponent\n\n\nCreating a component that extracts some props to create the className#\n\nBut this time it is not a polymorphic component, you can use\ncreateComponentWithStyleProps and the component is not going to have an as prop.\n\n\n\nThis component is always going to be a button.\n\n\nFinal words#\n\nObviously you may use directly a classname resolver of your liking directly in\nany component directly in the code like this (suppose we were using\ntailwindVariants):\n\n\n\nAnd it is really good, but we wanted to give some structure to react components\nto make them have all your variants by props.\n\nIf you read the article about our ideas that came from our adventures in the\nplace where we study, you may know we are planning on using a compiler to make\nsome optimizations at build time.\n\nAnd since react is something that is going to be in our projects, we wanted to\nmake the first step in this direction.","routePath":"/dyestheticsLabGHPages/guide/","lang":"","toc":[{"text":"What does it do?","id":"what-does-it-do","depth":2,"charIndex":145},{"text":"Installation","id":"installation","depth":2,"charIndex":1218},{"text":"Usage","id":"usage","depth":2,"charIndex":1234},{"text":"Creating a styled component","id":"creating-a-styled-component","depth":2,"charIndex":1243},{"text":"Example with tailwindVariants and Rambda","id":"example-with-tailwindvariants-and-rambda","depth":3,"charIndex":1987},{"text":"Creating a only polymorphic component","id":"creating-a-only-polymorphic-component","depth":2,"charIndex":2198},{"text":"Creating a component that extracts some props to create the className","id":"creating-a-component-that-extracts-some-props-to-create-the-classname","depth":2,"charIndex":2376},{"text":"Final words","id":"final-words","depth":2,"charIndex":2642}],"domain":"","frontmatter":{},"version":""}]